/** Declaration file generated by dts-gen */

export class MockXhr {
    constructor(...args: any[]);

    abort(...args: any[]): void;

    downloadProgress(...args: any[]): void;

    getAllResponseHeaders(...args: any[]): void;

    getResponseHeader(...args: any[]): void;

    open(...args: any[]): void;

    overrideMimeType(...args: any[]): void;

    respond(...args: any[]): void;

    send(...args: any[]): void;

    setNetworkError(...args: any[]): void;

    setRequestHeader(...args: any[]): void;

    setRequestTimeout(...args: any[]): void;

    setResponseBody(...args: any[]): void;

    setResponseHeaders(...args: any[]): void;

    uploadProgress(...args: any[]): void;

    static DONE: number;

    static HEADERS_RECEIVED: number;

    static LOADING: number;

    static OPENED: number;

    static UNSENT: number;

    static events: string[];

    static timeoutEnabled: boolean;

}

export class MockXhrServer {
    constructor(...args: any[]);

    addHandler(...args: any[]): void;

    delete(...args: any[]): void;

    disableTimeout(...args: any[]): void;

    enableTimeout(...args: any[]): void;

    get(...args: any[]): void;

    getRequestLog(...args: any[]): void;

    install(...args: any[]): void;

    post(...args: any[]): void;

    put(...args: any[]): void;

    remove(...args: any[]): void;

    setDefault404(...args: any[]): void;

    setDefaultHandler(...args: any[]): void;

}

export function newMockXhr(): any;

export function newServer(routes: any): any;

